name: Build Linux Android Toolchain

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - swift-android-5.4-branch
  pull_request:
    branches:
      - swift-android-5.4-branch

jobs:

  build-icu:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: sudo ./github-actions/010_install_dependencies.sh
    - name: Install NDK
      run: ./github-actions/020_install_ndk_16b.sh
    - name: Define build folders
      run: ./vagrant/provision/030_define_build_folders.sh
    - name: Cache ICU
      id: cache-icu
      uses: actions/cache@v2
      with:
        path: |
          /home/runner/libiconv-libicu-android/arm64-v8a
          /home/runner/libiconv-libicu-android/armeabi-v7a
          /home/runner/libiconv-libicu-android/x86_64
          /home/runner/libiconv-libicu-android/x86
        key: ${{ runner.os }}-ee2cf7f
    - name: Build ICU
      if: steps.cache-icu.outputs.cache-hit != 'true'
      run: ./build/Linux/010-build-icu.sh
    - uses: actions/upload-artifact@v2
      with:
        name: icu-arm64-v8a
        path: |
          /home/runner/libiconv-libicu-android/arm64-v8a
          !/home/runner/libiconv-libicu-android/arm64-v8a/icu
          !/home/runner/libiconv-libicu-android/arm64-v8a/android_support
          /home/runner/libiconv-libicu-android/arm64-v8a/icu/**/*.h
    - uses: actions/upload-artifact@v2
      with:
        name: icu-armeabi-v7a
        path: |
          /home/runner/libiconv-libicu-android/armeabi-v7a
          !/home/runner/libiconv-libicu-android/armeabi-v7a/icu
          !/home/runner/libiconv-libicu-android/armeabi-v7a/android_support
          /home/runner/libiconv-libicu-android/armeabi-v7a/icu/**/*.h
    - uses: actions/upload-artifact@v2
      with:
        name: icu-x86_64
        path: |
          /home/runner/libiconv-libicu-android/x86_64
          !/home/runner/libiconv-libicu-android/x86_64/icu
          !/home/runner/libiconv-libicu-android/x86_64/android_support
          /home/runner/libiconv-libicu-android/x86_64/icu/**/*.h
    - uses: actions/upload-artifact@v2
      with:
        name: icu-x86
        path: |
          /home/runner/libiconv-libicu-android/x86
          !/home/runner/libiconv-libicu-android/x86/icu
          !/home/runner/libiconv-libicu-android/x86/android_support
          /home/runner/libiconv-libicu-android/x86/icu/**/*.h


  build-swift-arm-64:
    needs: build-icu
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: sudo ./github-actions/010_install_dependencies.sh
    - name: Install NDK
      run: ./github-actions/020_install_ndk_21e.sh
    - name: Define build folders
      run: ./vagrant/provision/030_define_build_folders.sh
    - uses: actions/download-artifact@v2
      with:
        name: icu-arm64-v8a
        path: /home/runner/libiconv-libicu-android/arm64-v8a
    - name: Clone Swift
      run: ./build/Linux/020-clone-swift.sh
    - name: Cache Swift Arm64
      id: cache-swift-arm-64
      uses: actions/cache@v2
      with:
        path: /home/runner/out/swift-android-5.4
        key: ${{ runner.os }}-arm64-e1e3863
    - name: Build Swift
      if: steps.cache-swift-arm-64.outputs.cache-hit != 'true'
      run: ./build/Linux/031-build-swift-arm64.sh
    - name: Archive toolchain
      run: pushd ~/out; tar -cvf swift-android-5.4-arm64-v8a.tar swift-android-5.4; popd
    - uses: actions/upload-artifact@v2
      with:
        name: swift-android-5.4-arm64-v8a
        path: ~/out/swift-android-5.4-arm64-v8a.tar


  build-swift-armeabi-v7a:
    needs: build-icu
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: sudo ./github-actions/010_install_dependencies.sh
    - name: Install NDK
      run: ./github-actions/020_install_ndk_21e.sh
    - name: Define build folders
      run: ./vagrant/provision/030_define_build_folders.sh
    - uses: actions/download-artifact@v2
      with:
        name: icu-armeabi-v7a
        path: /home/runner/libiconv-libicu-android/armeabi-v7a
    - name: Clone Swift
      run: ./build/Linux/020-clone-swift.sh
    - name: Cache Swift Arm 32
      id: cache-swift-arm-32
      uses: actions/cache@v2
      with:
        path: /home/runner/out/swift-android-5.4
        key: ${{ runner.os }}-arm32-e1e3863
    - name: Build Swift
      if: steps.cache-swift-arm-32.outputs.cache-hit != 'true'
      run: ./build/Linux/032-build-swift-arm.sh
    - name: Archive toolchain
      run: pushd ~/out; tar -cvf swift-android-5.4-armeabi-v7a.tar swift-android-5.4; popd
    - uses: actions/upload-artifact@v2
      with:
        name: swift-android-5.4-armeabi-v7a
        path: ~/out/swift-android-5.4-armeabi-v7a.tar


  build-swift-x86:
    needs: build-icu
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: sudo ./github-actions/010_install_dependencies.sh
    - name: Install NDK
      run: ./github-actions/020_install_ndk_21e.sh
    - name: Define build folders
      run: ./vagrant/provision/030_define_build_folders.sh
    - uses: actions/download-artifact@v2
      with:
        name: icu-x86
        path: /home/runner/libiconv-libicu-android/x86
    - name: Clone Swift
      run: ./build/Linux/020-clone-swift.sh
    - name: Cache Swift x86
      id: cache-swift-x86
      uses: actions/cache@v2
      with:
        path: /home/runner/out/swift-android-5.4
        key: ${{ runner.os }}-x86-e1e3863
    - name: Build Swift
      if: steps.cache-swift-x86.outputs.cache-hit != 'true'
      run: ./build/Linux/034-build-swift-x86.sh
    - name: Archive toolchain
      run: pushd ~/out; tar -cvf swift-android-5.4-x86.tar swift-android-5.4; popd
    - uses: actions/upload-artifact@v2
      with:
        name: swift-android-5.4-x86
        path: ~/out/swift-android-5.4-x86.tar


  build-swift-x86_64:
    needs: build-icu
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: sudo ./github-actions/010_install_dependencies.sh
    - name: Install NDK
      run: ./github-actions/020_install_ndk_21e.sh
    - name: Define build folders
      run: ./vagrant/provision/030_define_build_folders.sh
    - uses: actions/download-artifact@v2
      with:
        name: icu-x86_64
        path: /home/runner/libiconv-libicu-android/x86_64
    - name: Clone Swift
      run: ./build/Linux/020-clone-swift.sh
    - name: Cache Swift x86_64
      id: cache-swift-x86_64
      uses: actions/cache@v2
      with:
        path: /home/runner/out/swift-android-5.4
        key: ${{ runner.os }}-x86_64-e1e3863
    - name: Build Swift
      if: steps.cache-swift-x86_64.outputs.cache-hit != 'true'
      run: ./build/Linux/033-build-swift-x86_64.sh
    - name: Archive toolchain
      run: pushd ~/out; tar -cvf swift-android-5.4-x86_64.tar swift-android-5.4; popd
    - uses: actions/upload-artifact@v2
      with:
        name: swift-android-5.4-x86_64
        path: ~/out/swift-android-5.4-x86_64.tar


  build-foundation-dependecies:
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: sudo ./github-actions/010_install_dependencies.sh
    - name: Install NDK
      run: ./github-actions/020_install_ndk_21e.sh
    - name: Define build folders
      run: ./vagrant/provision/030_define_build_folders.sh
    - name: Cache foundation dependencies
      id: cache-foundation-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/foundation-dependencies/arm64
          ~/foundation-dependencies/arm
          ~/foundation-dependencies/x86_64
          ~/foundation-dependencies/x86
        key: openssl-1.0.2u-curl-7_76_0-libxmlv2.9.10
    - name: Build Foundation Dependenncies
      if: steps.cache-foundation-dependencies.outputs.cache-hit != 'true'
      run: ./build/Linux/040-build-foundation-depends.sh
    - uses: actions/upload-artifact@v2
      with:
        name: foundation-dependecies-arm64-v8a
        path: |
          ~/foundation-dependencies/arm64
          !~/foundation-dependencies/arm64/src
    - uses: actions/upload-artifact@v2
      with:
        name: foundation-dependecies-armeabi-v7a
        path: |
          ~/foundation-dependencies/arm
          !~/foundation-dependencies/arm/src
    - uses: actions/upload-artifact@v2
      with:
        name: foundation-dependecies-x86_64
        path: |
          ~/foundation-dependencies/x86_64
          !~/foundation-dependencies/x86_64/src
    - uses: actions/upload-artifact@v2
      with:
        name: foundation-dependecies-x86
        path: |
          ~/foundation-dependencies/x86
          !~/foundation-dependencies/x86/src


  build-swift-corelibs-arm-64:
    needs: [build-icu, build-swift-arm-64, build-foundation-dependecies]
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: sudo ./github-actions/010_install_dependencies.sh
    - name: Install NDK
      run: ./github-actions/020_install_ndk_21e.sh
    - name: Define build folders
      run: ./vagrant/provision/030_define_build_folders.sh
    - uses: actions/download-artifact@v2
      with:
        name: icu-arm64-v8a
        path: ~/libiconv-libicu-android/arm64-v8a
    - uses: actions/download-artifact@v2
      with:
        name: swift-android-5.4-arm64-v8a
        path: ~/out
    - name: Unarchive toolchain
      run: pushd ~/out; tar -xvf swift-android-5.4-arm64-v8a.tar; popd
    - uses: actions/download-artifact@v2
      with:
        name: foundation-dependecies-arm64-v8a
        path: ~/foundation-dependencies/arm64
    - name: Clone Swift
      run: ./build/Linux/020-clone-swift.sh
    - name: Build Corelibs
      run: ./build/Linux/052-build-corelibs.sh arm64 aarch64 arm64-v8a
    - name: Archive toolchain
      run: pushd ~/out; tar -cvf swift-android-5.4-arm64-v8a-with-corelibs.tar swift-android-5.4; popd
    - uses: actions/upload-artifact@v2
      with:
        name: swift-android-5.4-arm64-v8a-with-corelibs
        path: ~/out/swift-android-5.4-arm64-v8a-with-corelibs.tar

  build-swift-corelibs-armeabi-v7a:
    needs: [build-icu, build-swift-armeabi-v7a, build-foundation-dependecies]
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: sudo ./github-actions/010_install_dependencies.sh
    - name: Install NDK
      run: ./github-actions/020_install_ndk_21e.sh
    - name: Define build folders
      run: ./vagrant/provision/030_define_build_folders.sh
    - uses: actions/download-artifact@v2
      with:
        name: icu-armeabi-v7a
        path: ~/libiconv-libicu-android/armeabi-v7a
    - uses: actions/download-artifact@v2
      with:
        name: swift-android-5.4-armeabi-v7a
        path: ~/out
    - name: Unarchive toolchain
      run: pushd ~/out; tar -xvf swift-android-5.4-armeabi-v7a.tar; popd
    - uses: actions/download-artifact@v2
      with:
        name: foundation-dependecies-armeabi-v7a
        path: ~/foundation-dependencies/arm
    - name: Clone Swift
      run: ./build/Linux/020-clone-swift.sh
    - name: Build Corelibs
      run: ./build/Linux/052-build-corelibs.sh arm armv7 armeabi-v7a
    - name: Archive toolchain
      run: pushd ~/out; tar -cvf swift-android-5.4-armeabi-v7a-with-corelibs.tar swift-android-5.4; popd
    - uses: actions/upload-artifact@v2
      with:
        name: swift-android-5.4-armeabi-v7a-with-corelibs
        path: ~/out/swift-android-5.4-armeabi-v7a-with-corelibs.tar

  build-swift-corelibs-x86:
    needs: [build-icu, build-swift-x86, build-foundation-dependecies]
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: sudo ./github-actions/010_install_dependencies.sh
    - name: Install NDK
      run: ./github-actions/020_install_ndk_21e.sh
    - name: Define build folders
      run: ./vagrant/provision/030_define_build_folders.sh
    - uses: actions/download-artifact@v2
      with:
        name: icu-x86
        path: ~/libiconv-libicu-android/x86
    - uses: actions/download-artifact@v2
      with:
        name: swift-android-5.4-x86
        path: ~/out
    - name: Unarchive toolchain
      run: pushd ~/out; tar -xvf swift-android-5.4-x86.tar; popd
    - uses: actions/download-artifact@v2
      with:
        name: foundation-dependecies-x86
        path: ~/foundation-dependencies/x86
    - name: Clone Swift
      run: ./build/Linux/020-clone-swift.sh
    - name: Build Corelibs
      run: ./build/Linux/052-build-corelibs.sh x86 i686 x86
    - name: Archive toolchain
      run: pushd ~/out; tar -cvf swift-android-5.4-x86-with-corelibs.tar swift-android-5.4; popd
    - uses: actions/upload-artifact@v2
      with:
        name: swift-android-5.4-x86-with-corelibs
        path: ~/out/swift-android-5.4-x86-with-corelibs.tar

  build-swift-corelibs-x86_64:
    needs: [build-icu, build-swift-x86_64, build-foundation-dependecies]
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: sudo ./github-actions/010_install_dependencies.sh
    - name: Install NDK
      run: ./github-actions/020_install_ndk_21e.sh
    - name: Define build folders
      run: ./vagrant/provision/030_define_build_folders.sh
    - uses: actions/download-artifact@v2
      with:
        name: icu-x86_64
        path: ~/libiconv-libicu-android/x86_64
    - uses: actions/download-artifact@v2
      with:
        name: swift-android-5.4-x86_64
        path: ~/out
    - name: Unarchive toolchain
      run: pushd ~/out; tar -xvf swift-android-5.4-x86_64.tar; popd
    - uses: actions/download-artifact@v2
      with:
        name: foundation-dependecies-x86_64
        path: ~/foundation-dependencies/x86_64
    - name: Clone Swift
      run: ./build/Linux/020-clone-swift.sh
    - name: Build Corelibs
      run: ./build/Linux/052-build-corelibs.sh x86_64 x86_64 x86_64
    - name: Archive toolchain
      run: pushd ~/out; tar -cvf swift-android-5.4-x86_64-with-corelibs.tar swift-android-5.4; popd
    - uses: actions/upload-artifact@v2
      with:
        name: swift-android-5.4-x86_64-with-corelibs
        path: ~/out/swift-android-5.4-x86_64-with-corelibs.tar

  build-swift-mac:
    runs-on: macos-10.15
    
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: sudo ./github-actions/010_install_dependencies.sh
    - name: Install NDK
      run: ./github-actions/020_install_ndk_21e.sh
    - name: Install Cmake and Ninja
      run: brew install cmake ninja pkg-config
    - name: Define build folders
      run: ./vagrant/provision/030_define_build_folders.sh
    - name: Clone Swift
      run: ./build/Linux/020-clone-swift.sh

